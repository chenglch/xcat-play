- name: Add execution permission for bldconserver.pl script
  file: path={{xcat_dep_path}}/conserver/bldconserver.pl mode=u+x

- name: Create rpms directory
  file: path=/tmp/rpms state=directory

- name: install gcc x86_64 dependency for sles11.4
  zypper: name={{ item }} state=present
  with_items:
    - gcc
  when: (ansible_distribution_major_version == "11")

- name: set variable
  set_fact:
    openssl_rpm: "sles_{{ansible_distribution_major_version}}_{{ansible_machine}}_openssl"
    zlib_rpm: "sles_{{ansible_distribution_major_version}}_{{ansible_machine}}_zlib"

- name: Copy rpm dependencies for sles system
  copy: src="{{ item }}" dest=/tmp/rpms
  with_items:
    - "{{ sles_packages[openssl_rpm] }}"
    - "{{ sles_packages[zlib_rpm] }}"

- name: install zlib and openssl dependencies for sles system
  shell: zypper install -y {{ sles_packages[openssl_rpm] }} {{ sles_packages[zlib_rpm] }} chdir=/tmp/rpms

- name: install rpmbuild dependency for sles12
  zypper: name={{ item }} state=present
  with_items:
    - rpmbuild
  when: (ansible_distribution_major_version == "12")

- name: Delete temp build directory on remote if exist
  file: path="{{ xcat_rhels_target_path }}" state=absent
  ignore_errors: True
  
- name: Make rpm package
  shell: ./bldconserver.pl chdir={{xcat_dep_path}}/conserver

- name: Find the target package file
  find: paths="{{ xcat_rhels_target_path }}" recurse=yes patterns="*.rpm"
  register: file_to_copy
  failed_when: "file_to_copy.files |length == 0"

- name: Copy the rpm package to local
  fetch:
    src: "{{ item.path }}"
    dest: "{{ xcat_conserver_target_path }}/{{ item.path.split('/')[-3] }}/{{ item.path.split('/')[-2] }}/{{ item.path.split('/')[-1] }}"
    flat: yes
  when: (file_to_copy is defined) and (file_to_copy.files is defined) and
        (item is defined) and (item.path is defined)
  with_items: "{{ file_to_copy.files }}"
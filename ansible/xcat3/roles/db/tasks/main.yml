---
- name: Install MySQL packages
  apt: name={{ item }} state=latest
  with_items:
    - mysql-server
    - python-mysqldb
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Install MariaDB packages
  yum: name={{ item }} state=latest
  with_items:
    - mariadb
    - mariadb-server
  when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'

# mariadb do not start automatically
- name: Start MariaDB Server
  systemd:
    state: started
    daemon_reload: yes
    name: mariadb
  when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'

- name: Install python dependency for mysql-python
  pip:
    name: "{{ item }}"
  with_items:
    - MySQL-python
  when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'

- name: Bind remote address for mysql on Ubuntu16.04
  ini_file: dest=/etc/mysql/mysql.conf.d/mysqld.cnf
            section=mysqld
            option=bind-address
            value={{item}}
  with_items:
    - "{{mysql_bind_address}}"
  notify:
    - restart mysql
  when: ansible_distribution_version == '16.04' or ansible_distribution == 'Ubuntu'

- name: Bind remote address for mysql on Ubuntu14.04
  ini_file: dest=/etc/mysql/my.cnf
            section=mysqld
            option=bind-address
            value={{item}}
  with_items:
    - "{{mysql_bind_address}}"
  notify:
    - restart mysql
  when: ansible_distribution_version == '14.04' or ansible_distribution == 'Ubuntu'

- name: Bind remote address for mariadb on Redhat
  ini_file: dest=/etc/mysql/my.cnf
            section=mysqld
            option=bind-address
            value={{item}}
  with_items:
    - "{{mysql_bind_address}}"
  notify:
    - restart mariadb
  when: (ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS') and ansible_distribution_version|int >=7

- name: Fluash mysql configuration
  meta: flush_handlers

- name: Update MySQL root password for all root accounts
  mysql_user: name=root host={{ item }} password={{ mysql_root_pass }} state=present
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ ansible_default_ipv4.address }}"
    - 127.0.0.1
    - ::1
    - localhost

- name: copy .my.cnf file with root password credentials
  template: src=templates/my.cnf dest=/root/.my.cnf owner=root mode=0600

- name: Remove database with name 'xcat3' if exists
  mysql_db:
    name: xcat3
    state: absent
  ignore_errors: True

- name: Create a new database with name 'xcat3'
  mysql_db:
    name: xcat3
    state: present

- name: Set user privileges for xcat3 in mysql
  mysql_user:
    user={{ mysql_xcat3_user }}
    password={{ mysql_xcat3_pass }}
    host={{ item }}
    state=present
    priv='xcat3.*:ALL'
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ ansible_default_ipv4.address }}"
    - "%"

- name: Create alembic directory (temporary step at development stage)
  file: path={{xcat3_path}}/xcat3/db/sqlalchemy/alembic/versions state=directory

- name: Sync database with python object
  shell: xcat3-dbsync --config-file /etc/xcat3/xcat3.conf create_schema
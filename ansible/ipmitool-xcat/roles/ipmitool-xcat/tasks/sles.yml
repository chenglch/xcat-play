- name: Add execution permission for bldipmi.pl script
  file: path=/tmp/xcat-dep/ipmitool/bldipmi.pl mode=u+x


# for SLES 12 x86_64
#
# the *devel packages are shipped with the SDK iso files and target machine
# is required to have a repo configured to point to the SDK for this to succeed.
#

- name: install rpmbuild x86 dependency for SLES12
  zypper: name={{ item }} state=present
  with_items:
    - rpmbuild
    - gcc
    - libopenssl-devel
    - zlib-devel
  when: (ansible_distribution_major_version == "12") and
        (ansible_machine == "x86_64")


# for SLES 11.4 x86_64
#
# the *devel packages are shipped with the SDK iso files and target machine
# is required to have a repo configured to point to the SDK for this to succeed.
#
- name: install gcc x86_64 dependency for SLES11.4
  zypper: name={{ item }} state=present
  with_items:
    - gcc
    - libopenssl-devel
    - zlib-devel
  when: (ansible_distribution_major_version == "11") and
        (ansible_machine == "x86_64")


# for SLES 11.4 ppc64
#
# the *devel packages are shipped with the SDK iso files and target machine
# is required to have a repo configured to point to the SDK for this to succeed.
#
- name: install gcc ppc64 dependency for SLES11.4
  zypper: name={{ item }} state=present
  with_items:
    - gcc
    - libopenssl-devel 
    - zlib-devel
  when: (ansible_distribution_major_version == "11") and
        (ansible_machine == "ppc64")


# for SLES 12 ppc64le
- name: install rpmbuild on ppc64le dependency for SLES12
  zypper: name={{ item }} state=present
  with_items:
    - rpmbuild
    - gcc
    - libopenssl-devel 
    - zlib-devel
  when: (ansible_distribution_major_version == "12") and
        (ansible_machine == "ppc64le")

- name: Delete temp build directory on remote if exist
  file: path="{{ xcat_rhels_target_path }}" state=absent
  ignore_errors: True
  
- name: Make rpm package
  shell: ./bldipmi.pl chdir=/tmp/xcat-dep/ipmitool

- name: Find the target package file
  find: paths="{{ xcat_rhels_target_path }}" recurse=yes patterns="*.rpm"
  register: file_to_copy
  failed_when: "file_to_copy.files |length == 0"

- name: Copy the rpm package to local
  fetch:
    src: "{{ item.path }}"
    dest: "{{ xcat_ipmitool_target_path }}/{{ item.path.split('/')[-3] }}/{{ item.path.split('/')[-2] }}/{{ item.path.split('/')[-1] }}"
    flat: yes
  when: (file_to_copy is defined) and (file_to_copy.files is defined) and
        (item is defined) and (item.path is defined)
  with_items: "{{ file_to_copy.files }}"
